!function(a,b){"object"==typeof exports&&"undefined"!=typeof module?b(exports):"function"==typeof define&&define.amd?define(["exports"],b):b(a.topojson=a.topojson||{})}(this,function(a){"use strict";function b(a,b){var d=b.id,e=b.bbox,f=null==b.properties?{}:b.properties,g=c(a,b);return null==d&&null==e?{type:"Feature",properties:f,geometry:g}:null==e?{type:"Feature",id:d,properties:f,geometry:g}:{type:"Feature",id:d,bbox:e,properties:f,geometry:g}}function c(a,b){function c(a,b){b.length&&b.pop();for(var c=j[a<0?~a:a],d=0,e=c.length;d<e;++d)b.push(i(c[d],d));a<0&&E(b,e)}function d(a){return i(a)}function e(a){for(var b=[],d=0,e=a.length;d<e;++d)c(a[d],b);return b.length<2&&b.push(b[0]),b}function f(a){for(var b=e(a);b.length<4;)b.push(b[0]);return b}function g(a){return a.map(f)}function h(a){var b,c=a.type;switch(c){case"GeometryCollection":return{type:c,geometries:a.geometries.map(h)};case"Point":b=d(a.coordinates);break;case"MultiPoint":b=a.coordinates.map(d);break;case"LineString":b=e(a.arcs);break;case"MultiLineString":b=a.arcs.map(e);break;case"Polygon":b=g(a.arcs);break;case"MultiPolygon":b=a.arcs.map(g);break;default:return null}return{type:c,coordinates:b}}var i=C(a.transform),j=a.arcs;return h(b)}function d(a,b,c){var d,f,g;if(arguments.length>1)d=e(a,b,c);else for(f=0,d=new Array(g=a.arcs.length);f<g;++f)d[f]=f;return{type:"MultiLineString",arcs:G(a,d)}}function e(a,b,c){function d(a){var b=a<0?~a:a;(k[b]||(k[b]=[])).push({i:a,g:i})}function e(a){a.forEach(d)}function f(a){a.forEach(e)}function g(a){a.forEach(f)}function h(a){switch(i=a,a.type){case"GeometryCollection":a.geometries.forEach(h);break;case"LineString":e(a.arcs);break;case"MultiLineString":case"Polygon":f(a.arcs);break;case"MultiPolygon":g(a.arcs)}}var i,j=[],k=[];return h(b),k.forEach(null==c?function(a){j.push(a[0].i)}:function(a){c(a[0].g,a[a.length-1].g)&&j.push(a[0].i)}),j}function f(a){for(var b,c=-1,d=a.length,e=a[d-1],f=0;++c<d;)b=e,e=a[c],f+=b[0]*e[1]-b[1]*e[0];return Math.abs(f)}function g(a,b){function d(a){switch(a.type){case"GeometryCollection":a.geometries.forEach(d);break;case"Polygon":e(a.arcs);break;case"MultiPolygon":a.arcs.forEach(e)}}function e(a){a.forEach(function(b){b.forEach(function(b){(h[b=b<0?~b:b]||(h[b]=[])).push(a)})}),i.push(a)}function g(b){return f(c(a,{type:"Polygon",arcs:[b]}).coordinates[0])}var h={},i=[],j=[];return b.forEach(d),i.forEach(function(a){if(!a._){var b=[],c=[a];for(a._=1,j.push(b);a=c.pop();)b.push(a),a.forEach(function(a){a.forEach(function(a){h[a<0?~a:a].forEach(function(a){a._||(a._=1,c.push(a))})})})}}),i.forEach(function(a){delete a._}),{type:"MultiPolygon",arcs:j.map(function(b){var c,d=[];if(b.forEach(function(a){a.forEach(function(a){a.forEach(function(a){h[a<0?~a:a].length<2&&d.push(a)})})}),d=G(a,d),(c=d.length)>1)for(var e,f,i=1,j=g(d[0]);i<c;++i)(e=g(d[i]))>j&&(f=d[0],d[0]=d[i],d[i]=f,j=e);return d})}}function h(a,b,c,d){i(a,b,c),i(a,b,b+d),i(a,b+d,c)}function i(a,b,c){for(var d,e=b+(c-- -b>>1);b<e;++b,--c)d=a[b],a[b]=a[c],a[c]=d}function j(a){return null==a?{type:null}:("FeatureCollection"===a.type?k:"Feature"===a.type?l:m)(a)}function k(a){var b={type:"GeometryCollection",geometries:a.features.map(l)};return null!=a.bbox&&(b.bbox=a.bbox),b}function l(a){var b,c=m(a.geometry);null!=a.id&&(c.id=a.id),null!=a.bbox&&(c.bbox=a.bbox);for(b in a.properties){c.properties=a.properties;break}return c}function m(a){if(null==a)return{type:null};var b="GeometryCollection"===a.type?{type:"GeometryCollection",geometries:a.geometries.map(m)}:"Point"===a.type||"MultiPoint"===a.type?{type:a.type,coordinates:a.coordinates}:{type:a.type,arcs:a.coordinates};return null!=a.bbox&&(b.bbox=a.bbox),b}function n(a){var b,c=a[0],d=a[1];return d<c&&(b=c,c=d,d=b),c+31*d}function o(a,b){var c,d=a[0],e=a[1],f=b[0],g=b[1];return e<d&&(c=d,d=e,e=c),g<f&&(c=f,f=g,g=c),d===f&&e===g}function p(){return!0}function q(a){return a}function r(a){return null!=a.type}function s(a){var b=a[0],c=a[1],d=a[2];return Math.abs((b[0]-d[0])*(c[1]-b[1])-(b[0]-c[0])*(d[1]-b[1]))/2}function t(a){for(var b,c=-1,d=a.length,e=a[d-1],f=0;++c<d;)b=e,e=a[c],f+=b[0]*e[1]-b[1]*e[0];return Math.abs(f)/2}function u(a,b){return a[1][2]-b[1][2]}function v(a){return[a[0],a[1],0]}function w(a,b){if(c=a.length){if((b=+b)<=0||c<2)return a[0];if(b>=1)return a[c-1];var c,d=(c-1)*b,e=Math.floor(d),f=a[e],g=a[e+1];return f+(g-f)*(d-e)}}function x(a,b){return b-a}function y(a,b){for(var c,d,e,f=0,g=a.length,h=0,i=a[b?f++:g-1],j=i[0]*ma,k=i[1]*ma/2+la,l=pa(k),m=qa(k);f<g;++f){i=a[f],c=j,j=i[0]*ma,k=i[1]*ma/2+la,d=l,l=pa(k),e=m,m=qa(k);var n=j-c,o=n>=0?1:-1,p=o*n,q=e*m,r=d*l+q*pa(p),s=q*o*qa(p);h+=oa(s,r)}return h}function z(a,b){var c=y(a,!0);return b&&(c*=-1),2*(c<0?ka+c:c)}function A(a){return 2*na(y(a,!1))}var B=function(a){return a},C=function(a){if(null==a)return B;var b,c,d=a.scale[0],e=a.scale[1],f=a.translate[0],g=a.translate[1];return function(a,h){h||(b=c=0);var i=2,j=a.length,k=new Array(j);for(k[0]=(b+=a[0])*d+f,k[1]=(c+=a[1])*e+g;i<j;)k[i]=a[i],++i;return k}},D=function(a){function b(a){a=e(a),a[0]<f&&(f=a[0]),a[0]>h&&(h=a[0]),a[1]<g&&(g=a[1]),a[1]>i&&(i=a[1])}function c(a){switch(a.type){case"GeometryCollection":a.geometries.forEach(c);break;case"Point":b(a.coordinates);break;case"MultiPoint":a.coordinates.forEach(b)}}var d,e=C(a.transform),f=1/0,g=f,h=-f,i=-f;a.arcs.forEach(function(a){for(var b,c=-1,d=a.length;++c<d;)b=e(a[c],c),b[0]<f&&(f=b[0]),b[0]>h&&(h=b[0]),b[1]<g&&(g=b[1]),b[1]>i&&(i=b[1])});for(d in a.objects)c(a.objects[d]);return[f,g,h,i]},E=function(a,b){for(var c,d=a.length,e=d-b;e<--d;)c=a[e],a[e++]=a[d],a[d]=c},F=function(a,c){return"GeometryCollection"===c.type?{type:"FeatureCollection",features:c.geometries.map(function(c){return b(a,c)})}:b(a,c)},G=function(a,b){function c(b){var c,d=a.arcs[b<0?~b:b],e=d[0];return a.transform?(c=[0,0],d.forEach(function(a){c[0]+=a[0],c[1]+=a[1]})):c=d[d.length-1],b<0?[c,e]:[e,c]}function d(a,b){for(var c in a){var d=a[c];delete b[d.start],delete d.start,delete d.end,d.forEach(function(a){e[a<0?~a:a]=1}),h.push(d)}}var e={},f={},g={},h=[],i=-1;return b.forEach(function(c,d){var e,f=a.arcs[c<0?~c:c];f.length<3&&!f[1][0]&&!f[1][1]&&(e=b[++i],b[i]=c,b[d]=e)}),b.forEach(function(a){var b,d,e=c(a),h=e[0],i=e[1];if(b=g[h])if(delete g[b.end],b.push(a),b.end=i,d=f[i]){delete f[d.start];var j=d===b?b:b.concat(d);f[j.start=b.start]=g[j.end=d.end]=j}else f[b.start]=g[b.end]=b;else if(b=f[i])if(delete f[b.start],b.unshift(a),b.start=h,d=g[h]){delete g[d.end];var k=d===b?b:d.concat(b);f[k.start=d.start]=g[k.end=b.end]=k}else f[b.start]=g[b.end]=b;else b=[a],f[b.start=h]=g[b.end=i]=b}),d(g,f),d(f,g),b.forEach(function(a){e[a<0?~a:a]||h.push([a])}),h},H=function(a){return c(a,d.apply(this,arguments))},I=function(a){return c(a,g.apply(this,arguments))},J=function(a,b){for(var c=0,d=a.length;c<d;){var e=c+d>>>1;a[e]<b?c=e+1:d=e}return c},K=function(a){function b(a,b){a.forEach(function(a){a<0&&(a=~a);var c=e[a];c?c.push(b):e[a]=[b]})}function c(a,c){a.forEach(function(a){b(a,c)})}function d(a,b){"GeometryCollection"===a.type?a.geometries.forEach(function(a){d(a,b)}):a.type in g&&g[a.type](a.arcs,b)}var e={},f=a.map(function(){return[]}),g={LineString:b,MultiLineString:c,Polygon:c,MultiPolygon:function(a,b){a.forEach(function(a){c(a,b)})}};a.forEach(d);for(var h in e)for(var i=e[h],j=i.length,k=0;k<j;++k)for(var l=k+1;l<j;++l){var m,n=i[k],o=i[l];(m=f[n])[h=J(m,o)]!==o&&m.splice(h,0,o),(m=f[o])[h=J(m,n)]!==n&&m.splice(h,0,n)}return f},L=function(a){if(null==a)return B;var b,c,d=a.scale[0],e=a.scale[1],f=a.translate[0],g=a.translate[1];return function(a,h){h||(b=c=0);var i=2,j=a.length,k=new Array(j),l=Math.round((a[0]-f)/d),m=Math.round((a[1]-g)/e);for(k[0]=l-b,b=l,k[1]=m-c,c=m;i<j;)k[i]=a[i],++i;return k}},M=function(a,b){function c(a){return m(a)}function d(a){var b;switch(a.type){case"GeometryCollection":b={type:"GeometryCollection",geometries:a.geometries.map(d)};break;case"Point":b={type:"Point",coordinates:c(a.coordinates)};break;case"MultiPoint":b={type:"MultiPoint",coordinates:a.coordinates.map(c)};break;default:return a}return null!=a.id&&(b.id=a.id),null!=a.bbox&&(b.bbox=a.bbox),null!=a.properties&&(b.properties=a.properties),b}function e(a){var b,c=0,d=1,e=a.length,f=new Array(e);for(f[0]=m(a[0],0);++c<e;)((b=m(a[c],c))[0]||b[1])&&(f[d++]=b);return 1===d&&(f[d++]=[0,0]),f.length=d,f}if(a.transform)throw new Error("already quantized");if(b&&b.scale)k=a.bbox;else{if(!((f=Math.floor(b))>=2))throw new Error("n must be â‰¥2");k=a.bbox||D(a);var f,g=k[0],h=k[1],i=k[2],j=k[3];b={scale:[i-g?(i-g)/(f-1):1,j-h?(j-h)/(f-1):1],translate:[g,h]}}var k,l,m=L(b),n=a.objects,o={};for(l in n)o[l]=d(n[l]);return{type:"Topology",bbox:k,transform:b,objects:o,arcs:a.arcs.map(e)}},N=function(a){function b(a){null!=a&&j.hasOwnProperty(a.type)&&j[a.type](a)}function c(a){var b=a[0],c=a[1];b<f&&(f=b),b>h&&(h=b),c<g&&(g=c),c>i&&(i=c)}function d(a){a.forEach(c)}function e(a){a.forEach(d)}var f=1/0,g=1/0,h=-(1/0),i=-(1/0),j={GeometryCollection:function(a){a.geometries.forEach(b)},Point:function(a){c(a.coordinates)},MultiPoint:function(a){a.coordinates.forEach(c)},LineString:function(a){d(a.arcs)},MultiLineString:function(a){a.arcs.forEach(d)},Polygon:function(a){a.arcs.forEach(d)},MultiPolygon:function(a){a.arcs.forEach(e)}};for(var k in a)b(a[k]);return h>=f&&i>=g?[f,g,h,i]:void 0},O=function(a,b,c,d,e){function f(d){for(var f=b(d)&j,g=i[f],h=0;g!=e;){if(c(g,d))return!0;if(++h>=a)throw new Error("full hashset");g=i[f=f+1&j]}return i[f]=d,!0}function g(d){for(var f=b(d)&j,g=i[f],h=0;g!=e;){if(c(g,d))return!0;if(++h>=a)break;g=i[f=f+1&j]}return!1}function h(){for(var a=[],b=0,c=i.length;b<c;++b){var d=i[b];d!=e&&a.push(d)}return a}3===arguments.length&&(d=Array,e=null);for(var i=new d(a=1<<Math.max(4,Math.ceil(Math.log(a)/Math.LN2))),j=a-1,k=0;k<a;++k)i[k]=e;return{add:f,has:g,values:h}},P=function(a,b,c,d,e,f){function g(d,f){for(var g=b(d)&m,h=k[g],i=0;h!=e;){if(c(h,d))return l[g]=f;if(++i>=a)throw new Error("full hashmap");h=k[g=g+1&m]}return k[g]=d,l[g]=f,f}function h(d,f){for(var g=b(d)&m,h=k[g],i=0;h!=e;){if(c(h,d))return l[g];if(++i>=a)throw new Error("full hashmap");h=k[g=g+1&m]}return k[g]=d,l[g]=f,f}function i(d,f){for(var g=b(d)&m,h=k[g],i=0;h!=e;){if(c(h,d))return l[g];if(++i>=a)break;h=k[g=g+1&m]}return f}function j(){for(var a=[],b=0,c=k.length;b<c;++b){var d=k[b];d!=e&&a.push(d)}return a}3===arguments.length&&(d=f=Array,e=null);for(var k=new d(a=1<<Math.max(4,Math.ceil(Math.log(a)/Math.LN2))),l=new f(a),m=a-1,n=0;n<a;++n)k[n]=e;return{set:g,maybeSet:h,get:i,keys:j}},Q=function(a,b){return a[0]===b[0]&&a[1]===b[1]},R=new ArrayBuffer(16),S=new Uint32Array(R),T=function(a){var b=S[0]^S[1];return b=b<<5^b>>7^S[2]^S[3],2147483647&b},U=function(a){function b(a,b,c,d){if(o[c]!==a){o[c]=a;var e=p[c];if(e>=0){var f=q[c];e===b&&f===d||e===d&&f===b||(++s,r[c]=1)}else p[c]=b,q[c]=d}}function c(){for(var a=P(1.4*k.length,d,e,Int32Array,-1,Int32Array),b=new Int32Array(k.length),c=0,f=k.length;c<f;++c)b[c]=a.maybeSet(c,c);return b}function d(a){return T(k[a])}function e(a,b){return Q(k[a],k[b])}var f,g,h,i,j,k=a.coordinates,l=a.lines,m=a.rings,n=c(),o=new Int32Array(k.length),p=new Int32Array(k.length),q=new Int32Array(k.length),r=new Int8Array(k.length),s=0;for(f=0,g=k.length;f<g;++f)o[f]=p[f]=q[f]=-1;for(f=0,g=l.length;f<g;++f){var t=l[f],u=t[0],v=t[1];for(i=n[u],j=n[++u],++s,r[i]=1;++u<=v;)b(f,h=i,i=j,j=n[u]);++s,r[j]=1}for(f=0,g=k.length;f<g;++f)o[f]=-1;for(f=0,g=m.length;f<g;++f){var w=m[f],x=w[0]+1,y=w[1];for(h=n[y-1],i=n[x-1],j=n[x],b(f,h,i,j);++x<=y;)b(f,h=i,i=j,j=n[x])}o=p=q=null;var z,A=O(1.4*s,T,Q);for(f=0,g=k.length;f<g;++f)r[z=n[f]]&&A.add(k[z]);return A},V=function(a){var b,c,d,e=U(a),f=a.coordinates,g=a.lines,i=a.rings;for(c=0,d=g.length;c<d;++c)for(var j=g[c],k=j[0],l=j[1];++k<l;)e.has(f[k])&&(b={0:k,1:j[1]},j[1]=k,j=j.next=b);for(c=0,d=i.length;c<d;++c)for(var m=i[c],n=m[0],o=n,p=m[1],q=e.has(f[n]);++o<p;)e.has(f[o])&&(q?(b={0:o,1:m[1]},m[1]=o,m=m.next=b):(h(f,n,p,p-o),f[p]=f[n],q=!0,o=n));return a},W=function(a){function b(a){var b,c,f,g,h,i,j,k;if(f=q.get(b=m[a[0]]))for(j=0,k=f.length;j<k;++j)if(g=f[j],d(g,a))return a[0]=g[0],void(a[1]=g[1]);if(h=q.get(c=m[a[1]]))for(j=0,k=h.length;j<k;++j)if(i=h[j],e(i,a))return a[1]=i[0],void(a[0]=i[1]);f?f.push(a):q.set(b,[a]),h?h.push(a):q.set(c,[a]),r.push(a)}function c(a){var b,c,d,e,i;if(c=q.get(b=m[a[0]]))for(e=0,i=c.length;e<i;++e){if(d=c[e],f(d,a))return a[0]=d[0],void(a[1]=d[1]);if(g(d,a))return a[0]=d[1],void(a[1]=d[0])}if(c=q.get(b=m[a[0]+h(a)]))for(e=0,i=c.length;e<i;++e){if(d=c[e],f(d,a))return a[0]=d[0],void(a[1]=d[1]);if(g(d,a))return a[0]=d[1],void(a[1]=d[0])}c?c.push(a):q.set(b,[a]),r.push(a)}function d(a,b){var c=a[0],d=b[0],e=a[1],f=b[1];if(c-e!==d-f)return!1;for(;c<=e;++c,++d)if(!Q(m[c],m[d]))return!1;return!0}function e(a,b){var c=a[0],d=b[0],e=a[1],f=b[1];if(c-e!==d-f)return!1;for(;c<=e;++c,--f)if(!Q(m[c],m[f]))return!1;return!0}function f(a,b){var c=a[0],d=b[0],e=a[1],f=b[1],g=e-c;if(g!==f-d)return!1;for(var i=h(a),j=h(b),k=0;k<g;++k)if(!Q(m[c+(k+i)%g],m[d+(k+j)%g]))return!1;return!0}function g(a,b){var c=a[0],d=b[0],e=a[1],f=b[1],g=e-c;if(g!==f-d)return!1;for(var i=h(a),j=g-h(b),k=0;k<g;++k)if(!Q(m[c+(k+i)%g],m[f-(k+j)%g]))return!1;return!0}function h(a){for(var b=a[0],c=a[1],d=b,e=d,f=m[d];++d<c;){var g=m[d];(g[0]<f[0]||g[0]===f[0]&&g[1]<f[1])&&(e=d,f=g)}return e-b}var i,j,k,l,m=a.coordinates,n=a.lines,o=a.rings,p=n.length+o.length;for(delete a.lines,delete a.rings,k=0,l=n.length;k<l;++k)for(i=n[k];i=i.next;)++p;for(k=0,l=o.length;k<l;++k)for(j=o[k];j=j.next;)++p;var q=P(2*p*1.4,T,Q),r=a.arcs=[];for(k=0,l=n.length;k<l;++k){i=n[k];do b(i);while(i=i.next)}for(k=0,l=o.length;k<l;++k)if(j=o[k],j.next){do b(j);while(j=j.next)}else c(j);return a},X=function(a){for(var b=-1,c=a.length;++b<c;){for(var d,e,f=a[b],g=0,h=1,i=f.length,j=f[0],k=j[0],l=j[1];++g<i;)j=f[g],d=j[0],e=j[1],d===k&&e===l||(f[h++]=[d-k,e-l],k=d,l=e);1===h&&(f[h++]=[0,0]),f.length=h}return a},Y=function(a){function b(a){a&&j.hasOwnProperty(a.type)&&j[a.type](a)}function c(a){for(var b=0,c=a.length;b<c;++b)i[++f]=a[b];var d={0:f-c+1,1:f};return g.push(d),d}function d(a){for(var b=0,c=a.length;b<c;++b)i[++f]=a[b];var d={0:f-c+1,1:f};return h.push(d),d}function e(a){return a.map(d)}var f=-1,g=[],h=[],i=[],j={GeometryCollection:function(a){a.geometries.forEach(b)},LineString:function(a){a.arcs=c(a.arcs)},MultiLineString:function(a){a.arcs=a.arcs.map(c)},Polygon:function(a){a.arcs=a.arcs.map(d)},MultiPolygon:function(a){a.arcs=a.arcs.map(e)}};for(var k in a)b(a[k]);return{type:"Topology",coordinates:i,lines:g,rings:h,objects:a}},Z=function(a){var b,c={};for(b in a)c[b]=j(a[b]);return c},$=function(a,b,c){function d(a){return[Math.round((a[0]-j)*n),Math.round((a[1]-k)*o)]}function e(a,b){for(var c,d,e,f,g,h=-1,i=0,l=a.length,m=new Array(l);++h<l;)c=a[h],f=Math.round((c[0]-j)*n),g=Math.round((c[1]-k)*o),f===d&&g===e||(m[i++]=[d=f,e=g]);for(m.length=i;i<b;)i=m.push([m[0][0],m[0][1]]);return m}function f(a){return e(a,2)}function g(a){return e(a,4)}function h(a){return a.map(g)}function i(a){null!=a&&p.hasOwnProperty(a.type)&&p[a.type](a)}var j=b[0],k=b[1],l=b[2],m=b[3],n=l-j?(c-1)/(l-j):1,o=m-k?(c-1)/(m-k):1,p={GeometryCollection:function(a){a.geometries.forEach(i)},Point:function(a){a.coordinates=d(a.coordinates)},MultiPoint:function(a){a.coordinates=a.coordinates.map(d)},LineString:function(a){a.arcs=f(a.arcs)},MultiLineString:function(a){a.arcs=a.arcs.map(f)},Polygon:function(a){a.arcs=h(a.arcs)},MultiPolygon:function(a){a.arcs=a.arcs.map(h)}};for(var q in a)i(a[q]);return{scale:[1/n,1/o],translate:[j,k]}},_=function(a,b){function c(a){a&&k.hasOwnProperty(a.type)&&k[a.type](a)}function d(a){var b=[];do{var c=j.get(a);b.push(a[0]<a[1]?c:~c)}while(a=a.next);return b}function e(a){return a.map(d)}var f=N(a=Z(a)),g=b>0&&f&&$(a,f,b),h=W(V(Y(a))),i=h.coordinates,j=P(1.4*h.arcs.length,n,o);a=h.objects,h.bbox=f,h.arcs=h.arcs.map(function(a,b){return j.set(a,b),i.slice(a[0],a[1]+1)}),delete h.coordinates,i=null;var k={GeometryCollection:function(a){a.geometries.forEach(c)},LineString:function(a){a.arcs=d(a.arcs)},MultiLineString:function(a){a.arcs=a.arcs.map(d)},Polygon:function(a){a.arcs=a.arcs.map(d)},MultiPolygon:function(a){a.arcs=a.arcs.map(e)}};for(var l in a)c(a[l]);return g&&(h.transform=g,h.arcs=X(h.arcs)),h},aa=function(a){function b(a){switch(a.type){case"GeometryCollection":a.geometries.forEach(b);break;case"LineString":d(a.arcs);break;case"MultiLineString":a.arcs.forEach(d);break;case"Polygon":a.arcs.forEach(d);break;case"MultiPolygon":a.arcs.forEach(e)}}function c(a){a<0&&(a=~a),q[a]||(q[a]=1,++r)}function d(a){a.forEach(c)}function e(a){a.forEach(d)}function f(a){var b;switch(a.type){case"GeometryCollection":b={type:"GeometryCollection",geometries:a.geometries.map(f)};break;case"LineString":b={type:"LineString",arcs:h(a.arcs)};break;case"MultiLineString":b={type:"MultiLineString",arcs:a.arcs.map(h)};break;case"Polygon":b={type:"Polygon",arcs:a.arcs.map(h)};break;case"MultiPolygon":b={type:"MultiPolygon",arcs:a.arcs.map(i)};break;default:return a}return null!=a.id&&(b.id=a.id),null!=a.bbox&&(b.bbox=a.bbox),null!=a.properties&&(b.properties=a.properties),b}function g(a){return a<0?~q[~a]:q[a]}function h(a){return a.map(g)}function i(a){return a.map(h)}var j,k,l=a.objects,m={},n=a.arcs,o=n.length,p=-1,q=new Array(o),r=0,s=-1;for(k in l)b(l[k]);for(j=new Array(r);++p<o;)q[p]&&(q[p]=++s,j[s]=n[p]);for(k in l)m[k]=f(l[k]);return{type:"Topology",bbox:a.bbox,transform:a.transform,objects:m,arcs:j}},ba=function(a,b){function c(a){var b,e;switch(a.type){case"Polygon":e=d(a.arcs),b=e?{type:"Polygon",arcs:e}:{type:null};break;case"MultiPolygon":e=a.arcs.map(d).filter(q),b=e.length?{type:"MultiPolygon",arcs:e}:{type:null};break;case"GeometryCollection":e=a.geometries.map(c).filter(r),b=e.length?{type:"GeometryCollection",geometries:e}:{type:null};break;default:return a}return null!=a.id&&(b.id=a.id),null!=a.bbox&&(b.bbox=a.bbox),null!=a.properties&&(b.properties=a.properties),b}function d(a){return a.length&&e(a[0])?[a[0]].concat(a.slice(1).filter(f)):null}function e(a){return b(a,!1)}function f(a){return b(a,!0)}var g,h=a.objects,i={};null==b&&(b=p);for(g in h)i[g]=c(h[g]);return aa({type:"Topology",bbox:a.bbox,transform:a.transform,objects:i,arcs:a.arcs})},ca=function(a){function b(a){switch(a.type){case"GeometryCollection":a.geometries.forEach(b);break;case"Polygon":c(a.arcs);break;case"MultiPolygon":a.arcs.forEach(c)}}function c(a){for(var b=0,c=a.length;b<c;++b,++f)for(var d=a[b],g=0,h=d.length;g<h;++g){var i=d[g];i<0&&(i=~i);var j=e[i];null==j?e[i]=f:j!==f&&(e[i]=-1)}}var d,e=new Array(a.arcs.length),f=0;for(d in a.objects)b(a.objects[d]);return function(a){for(var b,c=0,d=a.length;c<d;++c)if(e[(b=a[c])<0?~b:b]===-1)return!0;return!1}},da=function(a,b,c){return b=null==b?Number.MIN_VALUE:+b,null==c&&(c=t),function(d,e){return c(F(a,{type:"Polygon",arcs:[d]}).geometry.coordinates[0],e)>=b}},ea=function(a,b,c){var d=ca(a),e=da(a,b,c);return function(a,b){return d(a,b)||e(a,b)}},fa=function(){function a(a,b){for(;b>0;){var c=(b+1>>1)-1,e=d[c];if(u(a,e)>=0)break;d[e._=b]=e,d[a._=b=c]=a}}function b(a,b){for(;;){var c=b+1<<1,f=c-1,g=b,h=d[g];if(f<e&&u(d[f],h)<0&&(h=d[g=f]),c<e&&u(d[c],h)<0&&(h=d[g=c]),g===b)break;d[h._=b]=h,d[a._=b=g]=a}}var c={},d=[],e=0;return c.push=function(b){return a(d[b._=e]=b,e++),e},c.pop=function(){if(!(e<=0)){var a,c=d[0];return--e>0&&(a=d[e],b(d[a._=0]=a,0)),c}},c.remove=function(c){var f,g=c._;if(d[g]===c)return g!==--e&&(f=d[e],(u(f,c)<0?a:b)(d[f._=g]=f,g)),g},c},ga=function(a,b){function c(a){e.remove(a),a[1][2]=b(a),e.push(a)}var d=a.transform?C(a.transform):v,e=fa();null==b&&(b=s);var f=a.arcs.map(function(a){var f,g,h,i=[],j=0;for(a=a.map(d),g=1,h=a.length-1;g<h;++g)f=[a[g-1],a[g],a[g+1]],f[1][2]=b(f),i.push(f),e.push(f);for(a[0][2]=a[h][2]=1/0,g=0,h=i.length;g<h;++g)f=i[g],f.previous=i[g-1],f.next=i[g+1];for(;f=e.pop();){var k=f.previous,l=f.next;f[1][2]<j?f[1][2]=j:j=f[1][2],k&&(k.next=l,k[2]=f[2],c(k)),l&&(l.previous=k,l[0]=f[0],c(l))}return a});return{type:"Topology",bbox:a.bbox,objects:a.objects,arcs:f}},ha=function(a,b){var c=[];return a.arcs.forEach(function(a){a.forEach(function(a){isFinite(a[2])&&c.push(a[2])})}),c.length&&w(c.sort(x),b)},ia=function(a,b){b=null==b?Number.MIN_VALUE:+b;var c=a.arcs.map(function(a){for(var c,d=-1,e=0,f=a.length,g=new Array(f);++d<f;)(c=a[d])[2]>=b&&(g[e++]=[c[0],c[1]]);return g.length=e,g});return{type:"Topology",transform:a.transform,bbox:a.bbox,objects:a.objects,arcs:c}},ja=Math.PI,ka=2*ja,la=ja/4,ma=ja/180,na=Math.abs,oa=Math.atan2,pa=Math.cos,qa=Math.sin;a.bbox=D,a.feature=F,a.mesh=H,a.meshArcs=d,a.merge=I,a.mergeArcs=g,a.neighbors=K,a.quantize=M,a.transform=C,a.untransform=L,a.topology=_,a.filter=ba,a.filterAttached=ca,a.filterAttachedWeight=ea,a.filterWeight=da,a.planarRingArea=t,a.planarTriangleArea=s,a.presimplify=ga,a.quantile=ha,a.simplify=ia,a.sphericalRingArea=z,a.sphericalTriangleArea=A,Object.defineProperty(a,"__esModule",{value:!0})});